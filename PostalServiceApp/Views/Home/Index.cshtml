@{
    Layout = "_Layout";
}

<div class="row">
    <div class="col-md-8 mx-auto">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Postal Code Lookup</h3>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label for="postalCodeInput" class="form-label">Search Postal Code</label>
                    <div class="position-relative">
                        <input type="text" 
                               id="postalCodeInput" 
                               class="form-control" 
                               placeholder="Type postal code or city name..." 
                               autocomplete="off">
                        <div id="postalCodeDropdown" class="dropdown-menu position-absolute w-100" style="display: none;"></div>
                    </div>
                    <div class="form-text">Start typing a postal code (e.g., 10001, 90210) or city name to see suggestions</div>
                </div>
                
                <div class="mb-3">
                    <label class="form-label">Selected Postal Code</label>
                    <div id="selectedPostalCode" class="form-control bg-light">No postal code selected</div>
                </div>
            </div>
        </div>
        
        <div id="addressesSection" class="card mt-4" style="display: none;">
            <div class="card-header">
                <h4 class="card-title">Addresses in Selected Area</h4>
            </div>
            <div class="card-body">
                <div id="addressesList"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const postalCodeInput = document.getElementById('postalCodeInput');
            const dropdown = document.getElementById('postalCodeDropdown');
            const selectedPostalCode = document.getElementById('selectedPostalCode');
            const addressesSection = document.getElementById('addressesSection');
            const addressesList = document.getElementById('addressesList');
            
            let searchTimeout;
            
            postalCodeInput.addEventListener('input', function() {
                const query = this.value.trim();
                
                clearTimeout(searchTimeout);
                
                if (query.length < 2) {
                    dropdown.style.display = 'none';
                    return;
                }
                
                searchTimeout = setTimeout(() => {
                    searchPostalCodes(query);
                }, 300);
            });
            
            postalCodeInput.addEventListener('blur', function() {
                // Delay hiding to allow clicks on dropdown items
                setTimeout(() => {
                    dropdown.style.display = 'none';
                }, 150);
            });
            
            async function searchPostalCodes(query) {
                try {
                    const response = await fetch(`/api/postal/search?q=${encodeURIComponent(query)}`);
                    const results = await response.json();
                    
                    if (results.length > 0) {
                        showDropdown(results);
                    } else {
                        dropdown.style.display = 'none';
                    }
                } catch (error) {
                    console.error('Error searching postal codes:', error);
                    dropdown.style.display = 'none';
                }
            }
            
            function showDropdown(results) {
                dropdown.innerHTML = '';
                
                results.forEach(result => {
                    const item = document.createElement('a');
                    item.className = 'dropdown-item';
                    item.href = '#';
                    item.textContent = result.display;
                    item.addEventListener('click', function(e) {
                        e.preventDefault();
                        selectPostalCode(result);
                    });
                    dropdown.appendChild(item);
                });
                
                dropdown.style.display = 'block';
            }
            
            function selectPostalCode(postalCode) {
                postalCodeInput.value = postalCode.display;
                selectedPostalCode.textContent = `${postalCode.code} - ${postalCode.city}, ${postalCode.state}, ${postalCode.country}`;
                dropdown.style.display = 'none';
                
                loadAddresses(postalCode.code);
            }
            
            async function loadAddresses(postalCode) {
                try {
                    const response = await fetch(`/api/postal/${encodeURIComponent(postalCode)}/addresses`);
                    const addresses = await response.json();
                    
                    if (addresses.length > 0) {
                        showAddresses(addresses);
                    } else {
                        addressesList.innerHTML = '<div class="alert alert-info">No addresses found for this postal code.</div>';
                        addressesSection.style.display = 'block';
                    }
                } catch (error) {
                    console.error('Error loading addresses:', error);
                    addressesList.innerHTML = '<div class="alert alert-danger">Error loading addresses.</div>';
                    addressesSection.style.display = 'block';
                }
            }
            
            function showAddresses(addresses) {
                let html = '<div class="row">';
                
                addresses.forEach(address => {
                    html += `
                        <div class="col-md-6 mb-3">
                            <div class="card">
                                <div class="card-body">
                                    <h6 class="card-title">${address.fullAddress}</h6>
                                    <p class="card-text text-muted">
                                        <small>
                                            Street: ${address.streetNumber} ${address.street}<br>
                                            City: ${address.city}<br>
                                            State: ${address.state}<br>
                                            Postal Code: ${address.postalCode}
                                        </small>
                                    </p>
                                </div>
                            </div>
                        </div>
                    `;
                });
                
                html += '</div>';
                addressesList.innerHTML = html;
                addressesSection.style.display = 'block';
            }
        });
    </script>
}